### Test 1: Käyttäjän rekisteröinti (Signup)
POST http://localhost:5000/api/users/signup
Content-Type: application/json

{
  "name": "Test User",
  "email": "test@example.com",
  "password": "password123"
}

### Test 2: Duplikaattisähköpostilla rekisteröinti (signup) – pitäisi epäonnistua
POST http://localhost:5000/api/users/signup
Content-Type: application/json

{
  "name": "Test User Duplicate",
  "email": "test@example.com",
  "password": "password123"
}

### Test 3: Käyttäjän kirjautuminen (login) – oikeilla tiedoilla
POST http://localhost:5000/api/users/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### Test 4: Käyttäjän kirjautuminen (login) – virheellisellä salasanalla 
POST http://localhost:5000/api/users/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "wrongpassword"
}

### Test 5: Hae kaikki menu-items (public endpoint)
GET http://localhost:5000/api/items

### Test 6: Luo uusi menu-item ilman tokenia  (unauthorized)
POST http://localhost:5000/api/items
Content-Type: application/json

{
  "name": "Unauthorized Dish",
  "price": 9.99
}

### Test 7: Luo uusi menu-item (authorized)
POST http://localhost:5000/api/items
Content-Type: application/json
Authorization: Bearer <YOUR_JWT_TOKEN>

{
  "name": "New Dish",
  "price": 9.99
}

### Test 8: Päivitä menu-item tavallisella (ei-admin) tokenilla – pitäisi epäonnistua, jos admin-oikeudet vaaditaan
PUT http://localhost:5000/api/items/6
Content-Type: application/json
Authorization: Bearer <NON_ADMIN_JWT_TOKEN>

{
  "name": "Updated Dish by Non-admin",
  "price": 11.99
}

### Test 9: Päivitä menu-item admin-tokenilla – pitäisi onnistua, jos admin-oikeudet vaaditaan
PUT http://localhost:5000/api/items/6
Content-Type: application/json
Authorization: Bearer <ADMIN_JWT_TOKEN>

{
  "name": "Updated Dish",
  "price": 11.99
}

### Test 10: Poista menu-item (Authorized)
DELETE http://localhost:5000/api/items/6
Authorization: Bearer <YOUR_JWT_TOKEN>
